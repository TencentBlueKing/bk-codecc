package com.tencent.bk.codecc.defect.dao.defect.mongorepository.sca

import com.tencent.bk.codecc.defect.model.sca.BuildSCAVulnerabilityEntity
import org.springframework.data.mongodb.repository.MongoRepository
import org.springframework.stereotype.Repository

@Repository
interface BuildSCAVulnerabilityRepository : MongoRepository<BuildSCAVulnerabilityEntity, String> {

    /**
     * 统计指定任务、工具和构建版本的漏洞数量
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @param buildId 构建版本ID
     * @return 匹配条件的漏洞数量
     */
    fun countByTaskIdAndToolNameAndBuildId(taskId: Long, toolName: String, buildId: String): Long

    /**
     * 根据任务ID、工具名称和构建版本查询漏洞列表
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @param buildId 构建版本ID
     * @return 匹配的漏洞实体列表
     */
    fun findByTaskIdAndToolNameAndBuildId(
        taskId: Long,
        toolName: String,
        buildId: String
    ): List<BuildSCAVulnerabilityEntity>

    /**
     * 根据任务ID、多个工具名称和构建版本查询漏洞列表
     * @param taskId 任务ID
     * @param toolName 工具名称集合
     * @param buildIds 构建版本ID
     * @return 匹配的漏洞实体列表
     */
    fun findByTaskIdAndToolNameInAndBuildId(
        taskId: Long,
        toolName: Set<String>,
        buildIds: String
    ): List<BuildSCAVulnerabilityEntity>

    /**
     * 删除指定任务、工具和构建版本的漏洞记录
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @param buildId 构建版本ID
     */
    fun removeByTaskIdAndToolNameAndBuildId(taskId: Long, toolName: String, buildId: String)
}
