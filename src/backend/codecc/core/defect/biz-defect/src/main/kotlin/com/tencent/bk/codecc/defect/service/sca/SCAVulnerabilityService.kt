package com.tencent.bk.codecc.defect.service.sca

import com.tencent.bk.codecc.defect.model.BuildEntity
import com.tencent.bk.codecc.defect.model.sca.SCAVulnerabilityEntity

interface SCAVulnerabilityService {

    /**
     * 根据组件包名称集合查询漏洞列表
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @param packageNames 组件包名称集合
     * @return 匹配的漏洞实体列表
     */
    fun getVulnerabilityByPackageNames(
        taskId: Long,
        toolName: String,
        packageNames: Collection<String>
    ): List<SCAVulnerabilityEntity>

    /**
     * 保存漏洞信息集合
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @param vulnerabilities 需要保存的漏洞集合
     */
    fun saveVulnerabilities(
        taskId: Long,
        toolName: String,
        vulnerabilities: Collection<SCAVulnerabilityEntity>
    )

    /**
     * 保存构建关联的漏洞信息
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @param buildId 构建ID
     * @param buildEntity 构建实体信息（可为空）
     * @param vulnerabilities 需要保存的漏洞集合
     */
    fun saveBuildVulnerabilities(
        taskId: Long,
        toolName: String,
        buildId: String,
        buildEntity: BuildEntity?,
        vulnerabilities: Collection<SCAVulnerabilityEntity>
    )

    /**
     * 从构建快照中获取新发现的漏洞
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @param buildId 构建ID
     * @return 新发现的漏洞列表
     */
    fun getNewVulnerabilitiesFromSnapshot(
        taskId: Long,
        toolName: String,
        buildId: String
    ): List<SCAVulnerabilityEntity>

    /**
     * 查询不在指定组件包集合中的新漏洞
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @param packageNames 需要排除的组件包集合
     * @return 符合条件的漏洞列表
     */
    fun getNewVulByPackageNamesNotIn(
        taskId: Long,
        toolName: String,
        packageNames: Collection<String>
    ): List<SCAVulnerabilityEntity>

    /**
     * 查询新且关联有效组件包的漏洞
     * @param taskId 任务ID
     * @param toolName 工具名称
     * @return 过滤后的漏洞列表
     */
    fun getNewAndHasEnabledPackageVul(
        taskId: Long,
        toolName: String
    ): List<SCAVulnerabilityEntity>
}
