apiVersion: batch/v1
kind: Job
metadata:
  name: configuration
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      containers:
      - name: configuration
        image: {{ .Values.image.hub }}/bkci-codecc-configuration:{{ .Values.image.tag }}
        workingDir: /data/docker/bkci/codecc/configuration/
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/bin/sh','-c','/data/docker/bkci/codecc/configuration/import_config_codecc.sh']
        env:
          - name: CONSUL_SERVER
            value: {{ .Values.consul.server }}
          - name: INSTALL_PATH
            value: /data/docker/bkci
          - name: MODULE
            value: codecc
          - name: AUTH_PROVIDER
            value: sample
          - name: MYSQL_IP
            value: "{{ .Values.mongodb.host }}"
          - name: MYSQL_PORT
            value: "{{ .Values.mongodb.port }}"
          - name: MYSQL_USER
            value: "{{ .Values.mongodb.user }}"
          - name: MYSQL_PASS
            value: "{{ .Values.mongodb.password }}"
          - name: MONGO_HOST
            value: "{{ .Values.mongodb.host }}"
          - name: MONGO_PORT
            value: "{{ .Values.mongodb.port }}"
          - name: MONGO_USER
            value: "{{ .Values.mongodb.user }}"
          - name: MONGO_PASS
            value: "{{ .Values.mongodb.password }}"
          {{- range $key, $value := .Values.env }}
          - name : {{ $key }}
            value : "{{ $value }}"
          {{- end}}
      restartPolicy: Never
  backoffLimit: 4
